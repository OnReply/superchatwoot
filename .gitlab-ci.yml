stages:
  - build
  - deploy

build_worker:
  stage: build
  image: docker:stable-git
  services:
    - docker:dind
  variables:
    DOCKER_DRIVER: overlay2
  artifacts:
    paths:
      - image_worker.txt
  script:
    - export TAG_NAME="$(git describe --abbrev=0 --tags | cut -d"v" -f2)"
    - export BASE_CONTAINER_IMAGE="registry.gitlab.com/clairton/chatwoot/worker"
    - export CONTAINER_IMAGE="${BASE_CONTAINER_IMAGE}:${TAG_NAME}"
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    - docker build -f worker.Dockerfile -t $CONTAINER_IMAGE .
    - docker push $CONTAINER_IMAGE
    - docker login --username=_ --password=$HEROKU_TOKEN registry.heroku.com
    - export HEROKU_IMAGE="registry.heroku.com/chatwoot-worker:${TAG_NAME}"
    - docker tag $CONTAINER_IMAGE $HEROKU_IMAGE
    - docker push $HEROKU_IMAGE
    - export IMAGE_ID=`docker inspect $HEROKU_IMAGE --format={{.Id}}`
    - echo $IMAGE_ID > ./image_worker.txt
  only:
    - tags

deploy_worker:
  stage: deploy
  image: alpine:latest
  script:
    - apk add --update --no-cache wget 
    - export IMAGE_ID=`cat image_worker.txt`
    - export PAYLOAD='{"updates":[{"type":"worker","docker_image":"'"$IMAGE_ID"'"}]}'
    - export URL=https://api.heroku.com/apps/chatwoot-worker/formation
    - >
      wget $URL
      --server-response
      --method=PATCH
      --body-data=$PAYLOAD
      --header 'Content-Type: application/json'
      --header 'Accept: application/vnd.heroku+json; version=3.docker-releases'
      --header "Authorization: Bearer $HEROKU_TOKEN"
  only:
    - tags

build_web:
  stage: build
  image: docker:stable-git
  services:
    - docker:dind
  variables:
    DOCKER_DRIVER: overlay2
  artifacts:
    paths:
      - image_web.txt
  script:
    - export TAG_NAME="$(git describe --abbrev=0 --tags | cut -d"v" -f2)"
    - export BASE_CONTAINER_IMAGE="registry.gitlab.com/clairton/chatwoot/web"
    - export CONTAINER_IMAGE="${BASE_CONTAINER_IMAGE}:${TAG_NAME}"
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    - docker build -f web.Dockerfile -t $CONTAINER_IMAGE .
    - docker push $CONTAINER_IMAGE
    - docker login --username=_ --password=$HEROKU_TOKEN registry.heroku.com
    - export HEROKU_IMAGE="registry.heroku.com/chatwoot-w3b:${TAG_NAME}"
    - docker tag $CONTAINER_IMAGE $HEROKU_IMAGE
    - docker push $HEROKU_IMAGE
    - export IMAGE_ID=`docker inspect $HEROKU_IMAGE --format={{.Id}}`
    - echo $IMAGE_ID > ./image_web.txt
  only:
    - tags

deploy_web:
  stage: deploy
  image: alpine:latest
  script:
    - apk add --update --no-cache wget 
    - export IMAGE_ID=`cat image_web.txt`
    - export PAYLOAD='{"updates":[{"type":"web","docker_image":"'"$IMAGE_ID"'"}]}'
    - export URL=https://api.heroku.com/apps/chatwoot-w3b/formation
    - >
      wget $URL
      --server-response
      --method=PATCH
      --body-data=$PAYLOAD
      --header 'Content-Type: application/json'
      --header 'Accept: application/vnd.heroku+json; version=3.docker-releases'
      --header "Authorization: Bearer $HEROKU_TOKEN"
  only:
    - tags

build_relay:
  stage: build
  image: docker:stable-git
  services:
    - docker:dind
  variables:
    DOCKER_DRIVER: overlay2
  artifacts:
    paths:
      - image_relay.txt
  script:
    - export TAG_NAME="$(git describe --abbrev=0 --tags | cut -d"v" -f2)"
    - export BASE_CONTAINER_IMAGE="registry.gitlab.com/clairton/chatwoot/relay"
    - export CONTAINER_IMAGE="${BASE_CONTAINER_IMAGE}:${TAG_NAME}"
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    - docker build -f relay.Dockerfile -t $CONTAINER_IMAGE .
    - docker push $CONTAINER_IMAGE
    - docker login --username=_ --password=$HEROKU_TOKEN registry.heroku.com
    - export HEROKU_IMAGE="registry.heroku.com/chatwoot-relay:${TAG_NAME}"
    - docker tag $CONTAINER_IMAGE $HEROKU_IMAGE
    - docker push $HEROKU_IMAGE
    - export IMAGE_ID=`docker inspect $HEROKU_IMAGE --format={{.Id}}`
    - echo $IMAGE_ID > ./image_relay.txt
  only:
    - tags

deploy_relay:
  stage: deploy
  image: alpine:latest
  script:
    - apk add --update --no-cache wget 
    - export IMAGE_ID=`cat image_relay.txt`
    - export PAYLOAD='{"updates":[{"type":"worker","docker_image":"'"$IMAGE_ID"'"}]}'
    - export URL=https://api.heroku.com/apps/chatwoot-relay/formation
    - >
      wget $URL
      --server-response
      --method=PATCH
      --body-data=$PAYLOAD
      --header 'Content-Type: application/json'
      --header 'Accept: application/vnd.heroku+json; version=3.docker-releases'
      --header "Authorization: Bearer $HEROKU_TOKEN"
  only:
    - tags

build_whatsapp:
  stage: build
  image: docker:stable-git
  services:
    - docker:dind
  variables:
    DOCKER_DRIVER: overlay2
  artifacts:
    paths:
      - image_whatsapp.txt
  script:
    - export TAG_NAME="$(git describe --abbrev=0 --tags | cut -d"v" -f2)"
    - export BASE_CONTAINER_IMAGE="registry.gitlab.com/clairton/chatwoot/whatsapp"
    - export CONTAINER_IMAGE="${BASE_CONTAINER_IMAGE}:${TAG_NAME}"
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    - docker build -f whatsapp.Dockerfile -t $CONTAINER_IMAGE .
    - docker push $CONTAINER_IMAGE
    - docker login --username=_ --password=$HEROKU_TOKEN registry.heroku.com
    - export HEROKU_IMAGE="registry.heroku.com/chatwoot-whatsapp:${TAG_NAME}"
    - docker tag $CONTAINER_IMAGE $HEROKU_IMAGE
    - docker push $HEROKU_IMAGE
    - export IMAGE_ID=`docker inspect $HEROKU_IMAGE --format={{.Id}}`
    - echo $IMAGE_ID > ./image_whatsapp.txt
  only:
    - tags

deploy_whatsapp:
  stage: deploy
  image: alpine:latest
  script:
    - apk add --update --no-cache wget 
    - export IMAGE_ID=`cat image_whatsapp.txt`
    - export PAYLOAD='{"updates":[{"type":"web","docker_image":"'"$IMAGE_ID"'"}]}'
    - export URL=https://api.heroku.com/apps/chatwoot-whatsapp/formation
    - >
      wget $URL
      --server-response
      --method=PATCH
      --body-data=$PAYLOAD
      --header 'Content-Type: application/json'
      --header 'Accept: application/vnd.heroku+json; version=3.docker-releases'
      --header "Authorization: Bearer $HEROKU_TOKEN"
  only:
    - tags
